<?php declare(strict_types=1);
/**
 * This file was automatically generated.
 * All modifications will be lost.
 */
namespace Souplette\HTML\Tokenizer;

use Souplette\HTML\Tokenizer\Token\Character;
use Souplette\HTML\Tokenizer\Token\Comment;
use Souplette\HTML\Tokenizer\Token\Doctype;
use Souplette\HTML\Tokenizer\Token\EndTag;
use Souplette\HTML\Tokenizer\Token\EOF;
use Souplette\HTML\Tokenizer\Token\StartTag;
use Traversable;

final class Tokenizer extends AbstractTokenizer
{
    public function tokenize(TokenizerState $startState = TokenizerState::DATA, ?string $appropriateEndTag = null): Traversable
    {
        $this->reset($startState, $appropriateEndTag);
        while (true) {
            INITIAL:
            $cc = $this->input[$this->position] ?? '';
            switch ($this->state) {
            {% for current_state in state_names ~%}
                case TokenizerState::{{ current_state }}:
                {{ current_state }}: {
                    {{~ include(["tokenizer/#{current_state|lower}.php.twig", 'tokenizer/_unknown_state.php.twig'])|indent(5) }}
                }
                break;
            {%- endfor ~%}
                default:
                    throw new \LogicException("Unknown state: {$this->state}");
                    break;
            }
        };
        return null;
    }
}
