{#
    @see https://html.spec.whatwg.org/multipage/parsing.html#script-data-double-escaped-dash-dash-state
#}
{% import 'tokenizer/_macros.php.twig' as h -%}

if ($cc === '-') {
    // Emit a U+002D HYPHEN-MINUS character token.
    yield new Character('-');
    {{ h.consume(current_state) }}
} else if ($cc === '<') {
    // Emit a U+003C LESS-THAN SIGN character token.
    yield new Character('<');
    // Switch to the script data double escaped less-than sign state.
    {{ h.advance_to('SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN') }}
} else if ($cc === '>') {
    // Emit a U+003E GREATER-THAN SIGN character token.
    yield new Character('>');
    // Switch to the script data state.
    {{ h.advance_to('SCRIPT_DATA') }}
} else if ($cc === "\0") {
    // This is an unexpected-null-character parse error.
    {{ h.parse_error('UNEXPECTED_NULL_CHARACTER') }}
    // Emit a U+FFFD REPLACEMENT CHARACTER character token.
    yield new Character("\u{FFFD}");
    // Switch to the script data double escaped state
    {{ h.advance_to('SCRIPT_DATA_DOUBLE_ESCAPED') }}
} else if ({{ h.is_eof() }}) {
    // This is an eof-in-script-html-comment-like-text parse error.
    {{ h.parse_error('EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT') }}
    // Emit an end-of-file token.
    {{ h.emit_eof() }}
} else {
    // Emit the current input character as a character token.
    {{ h.chars_until("-<>\0") }}
    yield new Character($chars);
    // Switch to the script data double escaped state.
    {{ h.update_and_reconsume_in('SCRIPT_DATA_DOUBLE_ESCAPED') }}
}
