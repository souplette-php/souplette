{#
    @see https://html.spec.whatwg.org/multipage/parsing.html#before-doctype-name-state
#}
{% import 'tokenizer/_macros.php.twig' as h -%}

if ({{ h.is_whitespace() }}) {
    // Ignore the character.
    {{ h.advance_to('BEFORE_DOCTYPE_NAME') }}
} elseif ($cc === "\0") {
    // This is an unexpected-null-character parse error.
    {{ h.parse_error('UNEXPECTED_NULL_CHARACTER') }}
    // Create a new DOCTYPE token.
    $this->currentToken = new Doctype();
    // Set the token's name to a U+FFFD REPLACEMENT CHARACTER character.
    $this->currentToken->name = "u\{FFFD}";
    // Switch to the DOCTYPE name state.
    {{ h.advance_to('DOCTYPE_NAME') }}
} elseif ($cc === '>') {
    // This is a missing-doctype-name parse error.
    {{ h.parse_error('MISSING_DOCTYPE_NAME') }}
    // Create a new DOCTYPE token.
    $this->currentToken = new Doctype();
    // Set its force-quirks flag to on.
    $this->currentToken->forceQuirks = true;
    // Switch to the data state. Emit the token.
    {{ h.emit_and_resume_in('DATA') }}
} elseif ({{ h.is_eof() }}) {
    // This is an eof-in-doctype parse error.
    {{ h.parse_error('EOF_IN_DOCTYPE') }}
    // Create a new DOCTYPE token.
    $this->currentToken = new Doctype();
    // Set its force-quirks flag to on.
    $this->currentToken->forceQuirks = true;
    // Emit the token. Emit an end-of-file token.
    {{ h.emit_current_token() }}
    {{ h.emit_eof() }}
} else {
    // Create a new DOCTYPE token.
    $this->currentToken = new Doctype();
    // Set the token's name to the current input character.
    $this->currentToken->name = strtolower($cc);
    // Switch to the DOCTYPE name state.
    {{ h.advance_to('DOCTYPE_NAME') }}
}
