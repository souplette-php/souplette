{#
    @see https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state
#}
{% import 'tokenizer/_macros.php.twig' as h -%}

if ($cc === '!') {
    // Switch to the markup declaration open state.
    {{ h.advance_to('MARKUP_DECLARATION_OPEN') }}
} elseif ($cc === '/') {
    // Switch to the end tag open state.
    {{ h.advance_to('END_TAG_OPEN') }}
} elseif ({{ h.is_alpha() }}) {
    // Create a new start tag token, set its tag name to the empty string.
    $this->currentToken = new StartTag();
    // Reconsume in the tag name state.
    {{ h.reconsume_in('TAG_NAME') }}
} elseif ($cc === '?') {
    // This is an unexpected-question-mark-instead-of-tag-name parse error.
    {{ h.parse_error('UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME') }}
    // Create a comment token whose data is the empty string.
    $this->currentToken = new Comment('');
    // Reconsume in the bogus comment state.
    {{ h.reconsume_in('BOGUS_COMMENT') }}
} elseif ({{ h.is_eof() }}) {
    // This is an eof-before-tag-name parse error.
    {{ h.parse_error('EOF_BEFORE_TAG_NAME') }}
    // Emit a U+003C LESS-THAN SIGN character token and an end-of-file token.
    $this->tokenQueue->enqueue(new Character('<'));
    {{ h.emit_eof() }}
} else {
    // This is an invalid-first-character-of-tag-name parse error.
    {{ h.parse_error('INVALID_FIRST_CHARACTER_OF_TAG_NAME') }}
    // Emit a U+003C LESS-THAN SIGN character token.
    $this->tokenQueue->enqueue(new Character('<'));
    // Reconsume in the data state.
    {{ h.reconsume_in('DATA') }}
}
